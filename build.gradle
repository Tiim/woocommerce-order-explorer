import okhttp3.MultipartBody
import okhttp3.OkHttpClient
import okhttp3.Request

group 'ch.scbirs.shop'
version '0.2.0'

apply plugin: 'java'


sourceCompatibility = 1.10
targetCompatibility = 1.10

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.squareup.okhttp3:okhttp:3.10.0'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.squareup.okhttp3:okhttp:3.10.0'

    compile 'com.fasterxml.jackson.core:jackson-core:2.9.6'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.6'

    compile 'com.google.guava:guava:23.6.1-jre'
    compile 'commons-io:commons-io:2.6'
    compile 'org.apache.commons:commons-lang3:3.7'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'

    compile 'org.apache.poi:poi:3.17'

    compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.11'
    compile 'com.github.dhorions:boxable:1.5'

    runtime group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.11.0'
    runtime group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': 'ch.scbirs.shop.orderexplorer.OrderExplorer'
    }
}

gradle.buildFinished { result ->

    if (System.getenv("CI")?.toBoolean() ?: false) {
        def apiToken = System.getenv('PUSHOVER_API_TOKEN')
        def userKey = System.getenv('PUSHOVER_USER_KEY')

        if (apiToken != null && userKey != null) {
            println('Sending build status with Pushover')
            def status = result.failure ? 'failed' : 'success'
            def name = System.getenv('CI_PROJECT_NAME') ?: 'Unknown Project'
            def pipeline = System.getenv('CI_PIPELINE_URL') ?: 'Unknown Url'
            def msg = System.getenv('CI_COMMIT_MESSAGE') ?: 'Unknown commit message'
            def ref = System.getenv('CI_COMMIT_REF_NAME') ?: 'unknown branch'

            def body = new MultipartBody.Builder()
                    .setType(MultipartBody.FORM)
                    .addFormDataPart('token', "$apiToken")
                    .addFormDataPart('user', "$userKey")
                    .addFormDataPart('title', "$name: Build $status")
                    .addFormDataPart('message', "Commit on $ref \n$msg")
                    .addFormDataPart('url', pipeline)
                    .build()

            def req = new Request.Builder()
                    .url('https://api.pushover.net/1/messages.json')
                    .post(body)
                    .build();
            def res = new OkHttpClient().newCall(req)

            println(res.execute().body().string())
        } else {
            println('Skipping notification, Pushover credentials are not present')
        }
    }
}